local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Dead Rails",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Dead Rails",
   LoadingSubtitle = "join the discord",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Player", 4483362458) -- Title, Image

local Slider = Tab:CreateSlider({
   Name = "Speed",
   Range = {0, 100},
   Increment = 1,
   Suffix = "Bananas",
   CurrentValue = 1,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the slider changes
  game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)  -- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})

local Button = Tab:CreateButton({
   Name = "Infinite Jump",
   Interact = 'Click',
   Callback = function()
  _G.infinjump = not _G.infinjump

if _G.infinJumpStarted == nil then
	--Ensures this only runs once to save resources
	_G.infinJumpStarted = true
	
	--The actual infinite jump
	local plr = game:GetService('Players').LocalPlayer
	local m = plr:GetMouse()
	m.KeyDown:connect(function(k)
		if _G.infinjump then
			if k:byte() == 32 then
			humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
			humanoid:ChangeState('Jumping')
			wait()
			humanoid:ChangeState('Seated')
			end
		end
	end)
end   -- The function that takes place when the button is pressed
   end,
})

local isTeleportEnabled = false

local Toggle = Tab:CreateToggle({
   Name = "Enable Ctrl+Click Teleport",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
       isTeleportEnabled = Value
   end,
})

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local function onMouseClick()
    if isTeleportEnabled then
        local mouse = Players.LocalPlayer:GetMouse()
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
            local targetPosition = mouse.Hit.p  -- Get the position of the mouse click
            if targetPosition then
                Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)  -- Teleport the player
            end
        end
    end
end

-- Connect the function to the mouse click event
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.UserInputType == Enum.UserInputType.MouseButton1 then
        onMouseClick()
    end
end)

local Button = Tab:CreateButton({
   Name = "Chams/ESP",
   Interact = 'Click',
   Callback = function()
 loadstring(game:HttpGet('https://pastebin.com/raw/EqwstreZ'))()  -- The function that takes place when the button is pressed
   end,
})

--------


-- Flight Variables
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local flying = false
local flySpeed = 200 -- Increased speed for faster flight (adjust this value as needed)

-- Function to start flying
local function startFlying()
    flying = true
    
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(1000000, 1000000, 1000000)
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.Parent = rootPart

    local userInputService = game:GetService("UserInputService")
    
    -- Fly control while flying
    while flying do
        local moveDirection = Vector3.new(0, 0, 0)

        -- Controls based on user input
        if userInputService:IsKeyDown(Enum.KeyCode.W) then
            moveDirection = moveDirection + workspace.CurrentCamera.CFrame.LookVector
        end
        if userInputService:IsKeyDown(Enum.KeyCode.S) then
            moveDirection = moveDirection - workspace.CurrentCamera.CFrame.LookVector
        end
        if userInputService:IsKeyDown(Enum.KeyCode.A) then
            moveDirection = moveDirection - workspace.CurrentCamera.CFrame.RightVector
        end
        if userInputService:IsKeyDown(Enum.KeyCode.D) then
            moveDirection = moveDirection + workspace.CurrentCamera.CFrame.RightVector
        end
        if userInputService:IsKeyDown(Enum.KeyCode.Space) then
            moveDirection = moveDirection + Vector3.new(0, 1, 0)
        end
        if userInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
            moveDirection = moveDirection - Vector3.new(0, 1, 0)
        end

        -- Apply movement
        bodyVelocity.Velocity = moveDirection * flySpeed
        wait(0.1)
    end
end

-- Function to stop flying
local function stopFlying()
    flying = false
    local bodyVelocity = rootPart:FindFirstChild("BodyVelocity")
    if bodyVelocity then
        bodyVelocity:Destroy()
    end
end

-- Create Toggle Button
local Toggle = Tab:CreateToggle({
    Name = "Toggle Flight",
    CurrentValue = false,
    Flag = "ToggleFlight", 
    Callback = function(Value)
        if Value then
            startFlying()
        else
            stopFlying()
        end
    end,
})

-------------------

local Tab = Window:CreateTab("Game", 4483362458) -- Title, Image

local Input = Tab:CreateInput({
   Name = "Player Name",
   PlaceholderText = "Enter Player Name",
   NumbersOnly = false, -- Allow any characters for player names
   CharacterLimit = 15,
   OnEnter = true,
   RemoveTextAfterFocusLost = false,
   Callback = function(playerName)
       local player = game.Players:FindFirstChild(playerName)
       if player then
           local character = player.Character
           if character and character:FindFirstChild("HumanoidRootPart") then
               game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = character.HumanoidRootPart.CFrame
           else
               print("Character not found or does not have a HumanoidRootPart.")
           end
       else
           print("Player not found.")
       end
   end,
})

local Button = Tab:CreateButton({
   Name = "item magnet (risky)",
   Interact = 'Click',
   Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/thiennrb7/Script/refs/heads/main/obf_3wug09A9VhQw08S7vh9514KYabKIH8h1V3ec3g5nqoa2k8S0v3Gtzz4Ua8YUBoXi.lua.txt"))()  -- The function that takes place when the button is pressed
   end,
})

local Tab = Window:CreateTab("info", 4483362458) -- Title, Image

local Button = Tab:CreateButton({
   Name = "still in beta lmk what you want added",
   Interact = 'Click',
   Callback = function()
   end,
})
